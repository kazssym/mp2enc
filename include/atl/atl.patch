diff --git a/include/atl/atlmod.h b/include/atl/atlmod.h
--- a/include/atl/atlmod.h
+++ b/include/atl/atlmod.h
@@ -381,7 +381,7 @@
 HRESULT TRegistrarBaseT<T>::CreateRegKey(LPCTSTR keyStr, LPCTSTR ValueName, LPCTSTR Value)
 {
   CRegKey key;
-  HRESULT status = key.Create(HKEY_CLASSES_ROOT, keyStr);
+  LONG status = key.Create(HKEY_CLASSES_ROOT, keyStr);
 
   if ((status == ERROR_SUCCESS) && (Value != NULL))
   {
@@ -393,7 +393,7 @@
     ::MessageBox(0, dbgMsg, keyStr, MB_OK);
 #endif
   }
-  return status;
+  return HRESULT_FROM_WIN32(status);
 }
 
 // Deletes a Registry Key
@@ -403,7 +403,8 @@
 template <class T>
 HRESULT TRegistrarBaseT<T>::DeleteRegKey(LPCTSTR keyStr)
 {
-  return ::RegDeleteKey(HKEY_CLASSES_ROOT, keyStr);
+  LONG status = ::RegDeleteKey(HKEY_CLASSES_ROOT, keyStr);
+  return HRESULT_FROM_WIN32(status);
 }
 
 // Delete a Registry Key and all subkeys
@@ -415,7 +416,8 @@
   //
   CRegKey key;
   key.Attach(HKEY_CLASSES_ROOT);
-  return key.RecurseDeleteKey(keyStr);
+  LONG status = key.RecurseDeleteKey(keyStr);
+  return HRESULT_FROM_WIN32(status);
 }
 
 // Convert GUID to String
@@ -555,9 +557,10 @@
 template <class T> HRESULT
 TComServerRegistrarT<T>::UpdateRegistry(bool bRegister)
 {
+  HRESULT hres;
   if (bRegister)
   {
     static TCHAR szAutomation[] = _T(" /Automation");
 
     // Create registry entries
     //
@@ -558,10 +561,12 @@
   if (bRegister)
   {
     static TCHAR szAutomation[] = _T(" /Automation");
 
     // Create registry entries
     //
-    CreateRegKey(m_ClassKey, _T(""), m_Description);
+    hres = CreateRegKey(m_ClassKey, _T(""), m_Description);
+    if (FAILED(hres))
+      return hres;
 
     // ClassKey\ServerType
     //
@@ -581,7 +586,9 @@
 
     // Register ClassKey\ServerType
     //
-    CreateRegKey(key, _T(""), mod);
+    hres = CreateRegKey(key, _T(""), mod);
+    if (FAILED(hres))
+      return hres;
 
     // Store Threading Model
     // Ambient relies on defines (a la CBuilder3)
@@ -590,5 +597,5 @@
     if (IsEqual(T::GetThreadModel(), otAmbientThreadModel))
     {
 #if   defined(_ATL_SINGLE_THREADED)
-      CreateRegKey(key, szThrdMdl, _T("Single"));
+      hres = CreateRegKey(key, szThrdMdl, _T("Single"));
 #elif defined(_ATL_BOTH_THREADED)
@@ -594,3 +601,3 @@
 #elif defined(_ATL_BOTH_THREADED)
-      CreateRegKey(key, szThrdMdl, _T("Both"));
+      hres = CreateRegKey(key, szThrdMdl, _T("Both"));
 #elif defined(_ATL_APARTMENT_THREADED)
@@ -596,3 +603,3 @@
 #elif defined(_ATL_APARTMENT_THREADED)
-      CreateRegKey(key, szThrdMdl, _T("Apartment"));
+      hres = CreateRegKey(key, szThrdMdl, _T("Apartment"));
 #elif defined(_ATL_NEUTRAL_THREADED)
@@ -598,4 +605,4 @@
 #elif defined(_ATL_NEUTRAL_THREADED)
-      CreateRegKey(key, szThrdMdl, _T("Neutral"));
+      hres = CreateRegKey(key, szThrdMdl, _T("Neutral"));
 #elif defined(_ATL_FREE_THREADED)           // NOTE: Check _ATL_FREE_THREADED last
                                             //       because ATLBASE.H defines it for BOTH
@@ -600,4 +607,4 @@
 #elif defined(_ATL_FREE_THREADED)           // NOTE: Check _ATL_FREE_THREADED last
                                             //       because ATLBASE.H defines it for BOTH
-      CreateRegKey(key, szThrdMdl, _T("Free"));
+      hres = CreateRegKey(key, szThrdMdl, _T("Free"));
 #else
@@ -603,6 +610,6 @@
 #else
-      CreateRegKey(key, _T("NoThreadingModel"), _T(""));
+      hres = CreateRegKey(key, _T("NoThreadingModel"), _T(""));
 #endif
     }
     else if (IsEqual(T::GetThreadModel(), otSingle))
     {
@@ -605,8 +612,8 @@
 #endif
     }
     else if (IsEqual(T::GetThreadModel(), otSingle))
     {
-      CreateRegKey(key, szThrdMdl, _T("Single"));
+      hres = CreateRegKey(key, szThrdMdl, _T("Single"));
     }
     else if (IsEqual(T::GetThreadModel(), otFree))
     {
@@ -610,7 +617,7 @@
     }
     else if (IsEqual(T::GetThreadModel(), otFree))
     {
-      CreateRegKey(key, szThrdMdl, _T("Free"));
+      hres = CreateRegKey(key, szThrdMdl, _T("Free"));
     }
     else if (IsEqual(T::GetThreadModel(), otBoth))
     {
@@ -614,7 +621,7 @@
     }
     else if (IsEqual(T::GetThreadModel(), otBoth))
     {
-      CreateRegKey(key, szThrdMdl, _T("Both"));
+      hres = CreateRegKey(key, szThrdMdl, _T("Both"));
     }
     else if (IsEqual(T::GetThreadModel(), otNeutral))
     {
@@ -618,7 +625,7 @@
     }
     else if (IsEqual(T::GetThreadModel(), otNeutral))
     {
-      CreateRegKey(key, szThrdMdl, _T("Neutral"));
+      hres = CreateRegKey(key, szThrdMdl, _T("Neutral"));
     }
     else /* if (T::GetThreadModel() == otApartment)  (Default case) */
     {
@@ -622,5 +629,5 @@
     }
     else /* if (T::GetThreadModel() == otApartment)  (Default case) */
     {
-      CreateRegKey(key, szThrdMdl, _T("Apartment"));
+      hres = CreateRegKey(key, szThrdMdl, _T("Apartment"));
     }
@@ -626,6 +633,8 @@
     }
+    if (FAILED(hres))
+      return hres;
 
     // Register CLSID/ProgID
     //
     if (m_ProgID && *m_ProgID)
     {
@@ -627,10 +636,12 @@
 
     // Register CLSID/ProgID
     //
     if (m_ProgID && *m_ProgID)
     {
-      CreateRegKey(m_ProgID, _T(""), m_Description);
+      hres = CreateRegKey(m_ProgID, _T(""), m_Description);
+      if (FAILED(hres))
+        return hres;
 
       TAPtr<TCHAR> buff(new TCHAR[_MAX_PATH]);
       lstrcpy(buff, m_ProgID);
       lstrcat(buff, _T("\\CLSID"));
@@ -633,8 +644,10 @@
 
       TAPtr<TCHAR> buff(new TCHAR[_MAX_PATH]);
       lstrcpy(buff, m_ProgID);
       lstrcat(buff, _T("\\CLSID"));
-      CreateRegKey(buff, _T(""), m_ClassIDstr);
+      hres = CreateRegKey(buff, _T(""), m_ClassIDstr);
+      if (FAILED(hres))
+        return hres;
 
       lstrcpy(buff, m_ClassKey);
       lstrcat(buff, _T("\\ProgID"));
@@ -638,10 +651,10 @@
 
       lstrcpy(buff, m_ClassKey);
       lstrcat(buff, _T("\\ProgID"));
-      CreateRegKey(buff, _T(""), m_ProgID);
+      hres = CreateRegKey(buff, _T(""), m_ProgID);
     }
   }
   else
   {
     // Remove registry entries
     //
@@ -642,8 +655,10 @@
     }
   }
   else
   {
     // Remove registry entries
     //
-    NukeRegKey(m_ClassKey);
+    hres = NukeRegKey(m_ClassKey);
+    if (FAILED(hres))
+      return hres;
     if (m_ProgID && *m_ProgID)
@@ -649,3 +664,3 @@
     if (m_ProgID && *m_ProgID)
-      NukeRegKey(m_ProgID);
+      hres = NukeRegKey(m_ProgID);
   }
@@ -651,5 +666,5 @@
   }
-  return S_OK;
+  return hres;
 }
 
 
